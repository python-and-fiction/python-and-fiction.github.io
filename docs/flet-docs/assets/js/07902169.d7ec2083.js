"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[97011],{72049:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"extend/integrating-existing-flutter-packages","title":"Integrating existing Flutter packages into your Flet app","description":"The guide is being updated.","source":"@site/docs/extend/integrating-existing-flutter-packages.md","sourceDirName":"extend","slug":"/extend/integrating-existing-flutter-packages","permalink":"/docs/flet-docs/docs/extend/integrating-existing-flutter-packages","draft":false,"unlisted":false,"editUrl":"https://github.com/flet-dev/website/edit/main/docs/extend/integrating-existing-flutter-packages.md","tags":[],"version":"current","frontMatter":{"title":"Integrating existing Flutter packages into your Flet app","sidebar_label":"3rd-party Flutter packages"},"sidebar":"docs","previous":{"title":"Self Hosting","permalink":"/docs/flet-docs/docs/publish/web/dynamic-website/hosting/self-hosting"},"next":{"title":"Controls reference","permalink":"/docs/flet-docs/docs/controls"}}');var o=t(74848),i=t(28453);const l={title:"Integrating existing Flutter packages into your Flet app",sidebar_label:"3rd-party Flutter packages"},a=void 0,s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Creating Flet extension",id:"creating-flet-extension",level:2},{value:"Flet Dart package",id:"flet-dart-package",level:3},{value:"<code>pubspec.yaml</code>",id:"pubspecyaml",level:4},{value:"<code>&lt;package_name&gt;.dart</code>",id:"package_namedart",level:4},{value:"<code>create_control.dart</code>",id:"create_controldart",level:4},{value:"<code>&lt;control-name&gt;.dart</code>",id:"control-namedart",level:4},{value:"Flet Python control",id:"flet-python-control",level:3},{value:"Connect your Python app and Dart package",id:"connect-your-python-app-and-dart-package",level:3},{value:"Customize properties",id:"customize-properties",level:3},{value:"Flet <code>Control</code> properties",id:"flet-control-properties",level:4},{value:"Flet <code>ConstrainedControl</code> properties",id:"flet-constrainedcontrol-properties",level:4},{value:"Control-specific properties",id:"control-specific-properties",level:4},{value:"Examples for different types of properties and events",id:"examples-for-different-types-of-properties-and-events",level:4},{value:"Enum properties",id:"enum-properties",level:5},{value:"Json properties",id:"json-properties",level:5},{value:"Children",id:"children",level:5},{value:"Events",id:"events",level:5},{value:"Examples",id:"examples",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.admonition,{title:"Work in progress",type:"info",children:(0,o.jsx)(n.p,{children:"The guide is being updated."})}),"\n",(0,o.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(n.p,{children:"While Flet controls leverage many built-in Flutter widgets, enabling the creation of even complex applications, not all Flutter widgets or third-party packages can be directly supported by the Flet team or included within the core Flet framework."}),"\n",(0,o.jsxs)(n.p,{children:["To address this, the Flet framework provides an extensibility mechanism. This allows you to incorporate widgets and APIs from your own custom Flutter packages or ",(0,o.jsx)(n.a,{href:"https://pub.dev/packages?sort=popularity",children:"third-party libraries"})," directly into your Flet application."]}),"\n",(0,o.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.p,{children:["To integrate custom Flutter package into Flet you need to have basic understanding of how to create Flutter apps and packages in Dart language and have Flutter development environment configured. See ",(0,o.jsx)(n.a,{href:"https://docs.flutter.dev/get-started/install",children:"Flutter Getting Started"})," for more information about Flutter and Dart."]}),"\n",(0,o.jsx)(n.h2,{id:"creating-flet-extension",children:"Creating Flet extension"}),"\n",(0,o.jsx)(n.p,{children:"Flet extension that integrates 3rd-party Flutter package consists of the following parts:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Flet Dart package."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Flet Python control."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The Flet Dart package includes a mechanism to create Flutter widgets based on control names returned by the Control's ",(0,o.jsx)(n.code,{children:"_get_control_name()"})," function. This mechanism iterates through all third-party packages and returns the first matching widget."]}),"\n",(0,o.jsx)(n.p,{children:"Flet Python control is a Python class that you will use in your Flet program."}),"\n",(0,o.jsxs)(n.p,{children:["For example, take a look at a basic ",(0,o.jsx)(n.a,{href:"https://github.com/InesaFitsner/extend-flet-example",children:"Flet extension"})," for ",(0,o.jsx)(n.a,{href:"https://pub.dev/packages/flutter_spinkit",children:"flutter_spinkit"})," package."]}),"\n",(0,o.jsx)(n.h3,{id:"flet-dart-package",children:"Flet Dart package"}),"\n",(0,o.jsxs)(n.p,{children:["To create a new ",(0,o.jsx)(n.a,{href:"https://docs.flutter.dev/packages-and-plugins/developing-packages#dart",children:"Dart package"}),", run the following command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"flutter create --template=package <package_name>\n"})}),"\n",(0,o.jsx)(n.p,{children:"You will see this folder structure:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\u251c\u2500\u2500 CHANGELOG.md\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 analysis_options.yaml\n\u251c\u2500\u2500 lib\n\u2502\xa0\xa0 \u2514\u2500\u2500 <package_name>.dart\n\u251c\u2500\u2500 pubspec.lock\n\u251c\u2500\u2500 pubspec.yaml\n\u251c\u2500\u2500 test\n\u2502\xa0\xa0 \u2514\u2500\u2500 <package_name>_test.dart\n\u2514\u2500\u2500 <package_name>.iml\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["In the ",(0,o.jsx)(n.code,{children:"lib"})," folder, you need to create ",(0,o.jsx)(n.code,{children:"src"})," folder with two files: ",(0,o.jsx)(n.code,{children:"create_control.dart"})," and ",(0,o.jsx)(n.code,{children:"<control_name>.dart"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\u2514\u2500\u2500 <package_name>\n    \u251c\u2500\u2500 lib\n    \u2502   \u251c\u2500\u2500 <package_name>.dart\n    \u2502   \u2514\u2500\u2500 src\n    \u2502       \u251c\u2500\u2500 create_control.dart\n    \u2502       \u2514\u2500\u2500 <control_name>.dart\n    \u2514\u2500\u2500 pubspec.yaml\n        \n"})}),"\n",(0,o.jsx)(n.h4,{id:"pubspecyaml",children:(0,o.jsx)(n.code,{children:"pubspec.yaml"})}),"\n",(0,o.jsx)(n.p,{children:"A yaml file containing metadata that specifies the package's dependencies."}),"\n",(0,o.jsxs)(n.p,{children:["In your ",(0,o.jsx)(n.code,{children:"pubspec.yaml"})," you should add dependency to ",(0,o.jsx)(n.code,{children:"flet"})," and Flutter package for which you are creating your extension."]}),"\n",(0,o.jsxs)(n.p,{children:["In the Flet Spinkit example, ",(0,o.jsx)(n.code,{children:"pubspec.yaml"})," contains dependency to ",(0,o.jsx)(n.code,{children:"flutter_spinkit"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  flet: ^0.22.0\n  flutter_spinkit: ^5.2.1\n  \n"})}),"\n",(0,o.jsx)(n.h4,{id:"package_namedart",children:(0,o.jsx)(n.code,{children:"<package_name>.dart"})}),"\n",(0,o.jsx)(n.p,{children:"Extension package should export two methods:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"createControl"})," - called to create a widget that corresponds to a control on Python side."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ensureInitialized"})," - called once on Flet program start."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:'library <package_name>;\n\nexport "../src/create_control.dart" show createControl, ensureInitialized;\n'})}),"\n",(0,o.jsx)(n.h4,{id:"create_controldart",children:(0,o.jsx)(n.code,{children:"create_control.dart"})}),"\n",(0,o.jsxs)(n.p,{children:["Flet calls ",(0,o.jsx)(n.code,{children:"createControl"})," for all controls and returns the first matching widget."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"import 'package:flet/flet.dart';\n\nimport 'spinkit.dart';\n\nCreateControlFactory createControl = (CreateControlArgs args) {\n  switch (args.control.type) {\n    case \"spinkit\":\n      return SpinkitControl(\n        parent: args.parent,\n        control: args.control,\n      );\n    default:\n      return null;\n  }\n};\n\nvoid ensureInitialized() {\n  // nothing to initialize\n}\n"})}),"\n",(0,o.jsx)(n.h4,{id:"control-namedart",children:(0,o.jsx)(n.code,{children:"<control-name>.dart"})}),"\n",(0,o.jsx)(n.p,{children:'Here you create Flutter "wrapper" widget that will build Flutter widget or API that you want to use in your Flet app.'}),"\n",(0,o.jsx)(n.p,{children:"Wrapper widget passes the state of Python control down to a Flutter widget, that will be displayed on a page, and provides an API to route events from Flutter widget back to Python control."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"import 'package:flutter/material.dart';\nimport 'package:flutter_spinkit/flutter_spinkit.dart';\n\nclass SpinkitControl extends StatelessWidget {\n  const SpinkitControl({\n    super.key,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return const SpinKitRotatingCircle(\n      color: Colors.red,\n      size: 100.0,\n    );\n  }\n}\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["As a proof of concept, we would like to see the hardcoded ",(0,o.jsx)(n.code,{children:"SpinKitRotatingCircle"})," in our Flet program, and later we will get to customizing its properties."]}),"\n",(0,o.jsx)(n.h3,{id:"flet-python-control",children:"Flet Python control"}),"\n",(0,o.jsxs)(n.p,{children:["Flet Python control is a Python class that you can create in your Flet app or as an external Python module. In the Flet Spinkit example, we created Spinkit class in ",(0,o.jsx)(n.code,{children:"/controls/spinkit.py"})," file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'\nfrom flet_core.control import Control\n\n\nclass Spinkit(Control):\n    """\n    Spinkit Control.\n    """\n\n    def __init__(self):\n        Control.__init__(self)\n\n    def _get_control_name(self):\n        return "spinkit"\n\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The minumal requirements for this class is that it has to be inherited from Flet ",(0,o.jsx)(n.code,{children:"Control"})," and it has to\nhave ",(0,o.jsx)(n.code,{children:"_get_control_name"})," method that will return the control name. This name should be the same as ",(0,o.jsx)(n.code,{children:"args.control.type"}),"\nwe check in the ",(0,o.jsx)(n.code,{children:"create_control.dart"})," file."]}),"\n",(0,o.jsx)(n.h3,{id:"connect-your-python-app-and-dart-package",children:"Connect your Python app and Dart package"}),"\n",(0,o.jsxs)(n.p,{children:["Once you have created Flet Dart package and Flet Python control, create a Python program in ",(0,o.jsx)(n.code,{children:"main.py"})," that uses it:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import flet as ft\nfrom controls.spinkit import Spinkit\n\ndef main(page: ft.Page):\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    page.add(Spinkit())\n\n\nft.app(main)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Let's run this simple app with ",(0,o.jsx)(n.code,{children:"flet run"})," command. We expect to see the hardcoded ",(0,o.jsx)(n.code,{children:"SpinKitRotatingCircle"})," on the page but that's not happening yet. Instead, we see this message in place of the Spinkit control:"]}),"\n",(0,o.jsx)("img",{src:"/docs/flet-docs/img/docs/extending-flet/unknown-control.png",className:"screenshot-40"}),"\n",(0,o.jsx)(n.p,{children:"Our Flet app doesn't know yet about the new Flet Dart package that we created."}),"\n",(0,o.jsxs)(n.p,{children:["To connect your Python app and new Flet Dart package, you need create to ",(0,o.jsx)(n.code,{children:"pubspec.yaml"})," file on the same level as ",(0,o.jsx)(n.code,{children:"main.py"}),". It should have the following contents:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"dependencies:\n  flet_spinkit:\n    path: {absolute-path-to-flet-dart-package-folder}\n"})}),"\n",(0,o.jsx)(n.admonition,{title:"Work in progress",type:"info",children:(0,o.jsx)(n.p,{children:"This approach is subject to change and the guide is being updated."})}),"\n",(0,o.jsxs)(n.p,{children:["Now you need to build the app for the platform of your choice by running ",(0,o.jsx)(n.code,{children:"flet build"})," command, for example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"flet build macos\n"})}),"\n",(0,o.jsx)(n.p,{children:"Finally, we open the built app:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"open build/macos/flet_spinkit_app.app\n"})}),"\n",(0,o.jsx)("img",{src:"/docs/flet-docs/img/docs/extending-flet/spinkit-1.gif",className:"screenshot-40"}),"\n",(0,o.jsxs)(n.p,{children:["You can find source code for this example ",(0,o.jsx)(n.a,{href:"https://github.com/InesaFitsner/extend-flet-example/tree/spinkit-step-1",children:"here"}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"Every time you need to make changes to Python or Dart part of your extension, you need to re-run build command."})}),"\n",(0,o.jsx)(n.h3,{id:"customize-properties",children:"Customize properties"}),"\n",(0,o.jsx)(n.p,{children:"In the example above, Spinkit control creates a hardcoded Flutter widget. Now let's customize its properties."}),"\n",(0,o.jsxs)(n.h4,{id:"flet-control-properties",children:["Flet ",(0,o.jsx)(n.code,{children:"Control"})," properties"]}),"\n",(0,o.jsxs)(n.p,{children:["When we created Spinkit class in Python, it inherited from Flet ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet-core/src/flet_core/control.py",children:(0,o.jsx)(n.code,{children:"Control"})})," class that has properties common for all controls such as ",(0,o.jsx)(n.code,{children:"visible"}),", ",(0,o.jsx)(n.code,{children:"opacity"})," and ",(0,o.jsx)(n.code,{children:"tooltip"}),", to name a few. See reference for the common Control properties ",(0,o.jsx)(n.a,{href:"/docs/controls",children:"here"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"To be able to use these properties for your new control you need to add the Control properties you want to use in the constructor for your new Python control:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from typing import Any, Optional\n\nfrom flet_core.control import Control, OptionalNumber\n\nclass Spinkit(Control):\n    """\n    Spinkit Control.\n    """\n\n    def __init__(\n        self,\n        #\n        # Control\n        #\n        opacity: OptionalNumber = None,\n        tooltip: Optional[str] = None,\n        visible: Optional[bool] = None,\n        data: Any = None,\n    ):\n        Control.__init__(\n            self,\n            tooltip=tooltip,\n            opacity=opacity,\n            visible=visible,\n            data=data,\n        )\n\n    def _get_control_name(self):\n        return "spinkit"\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.code,{children:"<control-name>.dart"})," file, wrap your widget into ",(0,o.jsx)(n.code,{children:"baseControl()"})," to magically implement all Python's ",(0,o.jsx)(n.code,{children:"Control"})," properties:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"import 'package:flet/flet.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_spinkit/flutter_spinkit.dart';\n\nclass SpinkitControl extends StatelessWidget {\n  final Control? parent;\n  final Control control;\n\n  const SpinkitControl({\n    super.key,\n    required this.parent,\n    required this.control,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return baseControl(\n        context,\n        const SpinKitRotatingCircle(\n          color: Colors.green,\n          size: 100.0,\n        ),\n        parent,\n        control);\n  }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Finally, use ",(0,o.jsx)(n.code,{children:"Control"})," properties in your app:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import flet as ft\nfrom controls.spinkit import Spinkit\n\n\ndef main(page: ft.Page):\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    page.add(Spinkit(opacity=0.5, tooltip="Spinkit tooltip"))\n\n\nft.app(main)\n\n'})}),"\n",(0,o.jsxs)(n.p,{children:["You can find source code for this example ",(0,o.jsx)(n.a,{href:"https://github.com/InesaFitsner/extend-flet-example/tree/spinkit-step-2",children:"here"}),"."]}),"\n",(0,o.jsxs)(n.h4,{id:"flet-constrainedcontrol-properties",children:["Flet ",(0,o.jsx)(n.code,{children:"ConstrainedControl"})," properties"]}),"\n",(0,o.jsx)(n.p,{children:"Generally, there are three types of controls in Flet:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Visual Controls that are added to the app/page surface, such as Spinkit."}),"\n",(0,o.jsx)(n.li,{children:"Popup Controls (dialogs, pickers, panels etc.)."}),"\n",(0,o.jsxs)(n.li,{children:["Non-visual Controls or services that are added to ",(0,o.jsx)(n.code,{children:"overlay"}),", such as Video or Audio."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["In the most cases, Visual Controls could inherit from ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet-core/src/flet_core/constrained_control.py",children:(0,o.jsx)(n.code,{children:"ConstrainedControl"})})," that has many additional properties such as ",(0,o.jsx)(n.code,{children:"top"})," and ",(0,o.jsx)(n.code,{children:"left"})," for its position within Stack and a bunch of animation properties."]}),"\n",(0,o.jsxs)(n.p,{children:["To use those properties, inherit your control from ",(0,o.jsx)(n.code,{children:"CostrainedControl"})," and add those properties to the constructor of\nyour Python control:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from typing import Any, Optional\n\nfrom flet_core.constrained_control import ConstrainedControl\nfrom flet_core.control import OptionalNumber\n\n\nclass Spinkit(ConstrainedControl):\n    """\n    Spinkit Control.\n    """\n\n    def __init__(\n        self,\n        #\n        # Control\n        #\n        opacity: OptionalNumber = None,\n        tooltip: Optional[str] = None,\n        visible: Optional[bool] = None,\n        data: Any = None,\n        #\n        # ConstrainedControl\n        #\n        left: OptionalNumber = None,\n        top: OptionalNumber = None,\n        right: OptionalNumber = None,\n        bottom: OptionalNumber = None,\n    ):\n        ConstrainedControl.__init__(\n            self,\n            tooltip=tooltip,\n            opacity=opacity,\n            visible=visible,\n            data=data,\n            left=left,\n            top=top,\n            right=right,\n            bottom=bottom,\n        )\n\n    def _get_control_name(self):\n        return "spinkit"\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.code,{children:"<control-name>.dart"})," file, use ",(0,o.jsx)(n.code,{children:"constrainedControl"})," method to wrap Flutter widget:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"import 'package:flet/flet.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_spinkit/flutter_spinkit.dart';\n\nclass SpinkitControl extends StatelessWidget {\n  final Control? parent;\n  final Control control;\n\n  const SpinkitControl({\n    super.key,\n    required this.parent,\n    required this.control,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    return constrainedControl(\n        context,\n        const SpinKitRotatingCircle(\n          color: Colors.green,\n          size: 100.0,\n        ),\n        parent,\n        control);\n  }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Use ",(0,o.jsx)(n.code,{children:"ConstrainedControl"})," properties in your app:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import flet as ft\nfrom controls.spinkit import Spinkit\n\n\ndef main(page: ft.Page):\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    page.add(\n        ft.Stack(\n            [\n                ft.Container(height=200, width=200, bgcolor=ft.Colors.BLUE_100),\n                Spinkit(opacity=0.5, tooltip="Spinkit tooltip", top=0, left=0),\n            ]\n        )\n    )\n\n\nft.app(main)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["You can find source code for this example ",(0,o.jsx)(n.a,{href:"https://github.com/InesaFitsner/extend-flet-example/tree/spinkit-step-2",children:"here"}),"."]}),"\n",(0,o.jsx)(n.h4,{id:"control-specific-properties",children:"Control-specific properties"}),"\n",(0,o.jsxs)(n.p,{children:["Now that you have taken full advantage of the properties Flet ",(0,o.jsx)(n.code,{children:"Control"})," and ",(0,o.jsx)(n.code,{children:"ConstrainedControl"})," offer, let's define the properties that are specific to the new Control you are building."]}),"\n",(0,o.jsxs)(n.p,{children:["In the Spinkit example, let's define its ",(0,o.jsx)(n.code,{children:"color"})," and ",(0,o.jsx)(n.code,{children:"size"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In Python class, define new ",(0,o.jsx)(n.code,{children:"color"})," and ",(0,o.jsx)(n.code,{children:"size"})," properties:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from typing import Any, Optional\n\nfrom flet_core.constrained_control import ConstrainedControl\nfrom flet_core.control import OptionalNumber\n\n\nclass Spinkit(ConstrainedControl):\n    """\n    Spinkit Control.\n    """\n\n    def __init__(\n        self,\n        #\n        # Control\n        #\n        opacity: OptionalNumber = None,\n        tooltip: Optional[str] = None,\n        visible: Optional[bool] = None,\n        data: Any = None,\n        #\n        # ConstrainedControl\n        #\n        left: OptionalNumber = None,\n        top: OptionalNumber = None,\n        right: OptionalNumber = None,\n        bottom: OptionalNumber = None,\n        #\n        # Spinkit specific\n        #\n        color: Optional[str] = None,\n        size: OptionalNumber = None,\n    ):\n        ConstrainedControl.__init__(\n            self,\n            tooltip=tooltip,\n            opacity=opacity,\n            visible=visible,\n            data=data,\n            left=left,\n            top=top,\n            right=right,\n            bottom=bottom,\n        )\n\n        self.color = color\n        self.size = size\n\n    def _get_control_name(self):\n        return "spinkit"\n\n    # color\n    @property\n    def color(self):\n        return self._get_attr("color")\n\n    @color.setter\n    def color(self, value):\n        self._set_attr("color", value)\n\n    # size\n    @property\n    def size(self):\n        return self._get_attr("size")\n\n    @size.setter\n    def size(self, value):\n        self._set_attr("size", value)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.code,{children:"<control-name>.dart"})," file, use helper methods ",(0,o.jsx)(n.code,{children:"attrColor"})," and ",(0,o.jsx)(n.code,{children:"attrDouble"})," to access color and size values:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:"import 'package:flet/flet.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_spinkit/flutter_spinkit.dart';\n\nclass SpinkitControl extends StatelessWidget {\n  final Control? parent;\n  final Control control;\n\n  const SpinkitControl({\n    super.key,\n    required this.parent,\n    required this.control,\n  });\n\n  @override\n  Widget build(BuildContext context) {\n    var color = control.attrColor(\"color\", context);\n    var size = control.attrDouble(\"size\");\n\n    return constrainedControl(\n        context,\n        SpinKitRotatingCircle(\n          color: color,\n          size: size ?? 50,\n        ),\n        parent,\n        control);\n  }\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Use ",(0,o.jsx)(n.code,{children:"color"})," and ",(0,o.jsx)(n.code,{children:"size"})," properties in your app:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import flet as ft\nfrom controls.spinkit import Spinkit\n\n\ndef main(page: ft.Page):\n    page.vertical_alignment = ft.MainAxisAlignment.CENTER\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    page.add(\n        ft.Stack(\n            [\n                ft.Container(height=200, width=200, bgcolor=ft.Colors.BLUE_100),\n                Spinkit(\n                    opacity=0.5,\n                    tooltip="Spinkit tooltip",\n                    top=0,\n                    left=0,\n                    color=ft.Colors.PURPLE,\n                    size=150,\n                ),\n            ]\n        )\n    )\n\nft.app(main)\n\n'})}),"\n",(0,o.jsxs)(n.p,{children:["You can find source code for this example ",(0,o.jsx)(n.a,{href:"https://github.com/InesaFitsner/extend-flet-example/tree/spinkit-step-4",children:"here"}),"."]}),"\n",(0,o.jsx)(n.h4,{id:"examples-for-different-types-of-properties-and-events",children:"Examples for different types of properties and events"}),"\n",(0,o.jsx)(n.h5,{id:"enum-properties",children:"Enum properties"}),"\n",(0,o.jsxs)(n.p,{children:["For example, ",(0,o.jsx)(n.code,{children:"clip_behaviour"})," for ",(0,o.jsx)(n.code,{children:"AppBar"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet-core/src/flet_core/app_bar.py",children:"Python"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# clip_behavior\n@property\ndef clip_behavior(self) -> Optional[ClipBehavior]:\n    return self._get_attr("clipBehavior")\n\n@clip_behavior.setter\ndef clip_behavior(self, value: Optional[ClipBehavior]):\n    self._set_attr(\n        "clipBehavior",\n        value.value if isinstance(value, ClipBehavior) else value,\n    )\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/packages/flet/lib/src/controls/app_bar.dart",children:"Dart"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:'var clipBehavior = Clip.values.firstWhere(\n    (e) =>\n        e.name.toLowerCase() ==\n        widget.control.attrString("clipBehavior", "")!.toLowerCase(),\n    orElse: () => Clip.none);\n'})}),"\n",(0,o.jsx)(n.h5,{id:"json-properties",children:"Json properties"}),"\n",(0,o.jsxs)(n.p,{children:["For example, ",(0,o.jsx)(n.code,{children:"shape"})," property for ",(0,o.jsx)(n.code,{children:"Card"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet-core/src/flet_core/card.py",children:"Python"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'def before_update(self):\n    super().before_update()\n    self._set_attr_json("shape", self.__shape)\n\n# shape\n@property\ndef shape(self) -> Optional[OutlinedBorder]:\n    return self.__shape\n\n@shape.setter\ndef shape(self, value: Optional[OutlinedBorder]):\n    self.__shape = value\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/packages/flet/lib/src/controls/card.dart",children:"Dart"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:'var shape = parseOutlinedBorder(control, "shape")\n'})}),"\n",(0,o.jsx)(n.h5,{id:"children",children:"Children"}),"\n",(0,o.jsxs)(n.p,{children:["For example, ",(0,o.jsx)(n.code,{children:"content"})," for ",(0,o.jsx)(n.code,{children:"AlertDialog"}),":"]}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet-core/src/flet_core/alert_dialog.py",children:"Python"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'    def _get_children(self):\n        children = []\n        if self.__content:\n            self.__content._set_attr_internal("n", "content")\n            children.append(self.__content)\n        return children\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/packages/flet/lib/src/controls/alert_dialog.dart",children:"Dart"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:'    var contentCtrls =\n        widget.children.where((c) => c.name == "content" && c.isVisible);\n'})}),"\n",(0,o.jsx)(n.h5,{id:"events",children:"Events"}),"\n",(0,o.jsxs)(n.p,{children:["For example, ",(0,o.jsx)(n.code,{children:"on_click"})," event for ",(0,o.jsx)(n.code,{children:"ElevatedButton"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet-core/src/flet_core/elevated_button.py",children:"Python"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# on_click\n@property\ndef on_click(self):\n    return self._get_event_handler("click")\n\n@on_click.setter\ndef on_click(self, handler):\n    self._add_event_handler("click", handler)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/packages/flet/lib/src/controls/elevated_button.dart",children:"Dart"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dart",children:'Function()? onPressed = !disabled\n    ? () {\n        debugPrint("Button ${widget.control.id} clicked!");\n        if (url != "") {\n        openWebBrowser(url,\n            webWindowName: widget.control.attrString("urlTarget"));\n        }\n        widget.backend.triggerControlEvent(widget.control.id, "click");\n    }\n    : null;\n'})}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.p,{children:"A few Flet controls are implemented as in external packages and could serve as a starting point for your own controls:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Video"})," - ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet-core/src/flet_core/video.py",children:"Python control"}),", ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/tree/main/packages/flet_video",children:"Flutter package"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Audio"})," - ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet-core/src/flet_core/audio.py",children:"Python control"}),", ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/tree/main/packages/flet_audio",children:"Flutter package"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Rive"})," - ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/blob/main/sdk/python/packages/flet-core/src/flet_core/rive.py",children:"Python control"}),", ",(0,o.jsx)(n.a,{href:"https://github.com/flet-dev/flet/tree/main/packages/flet_rive",children:"Flutter package"})]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var r=t(96540);const o={},i=r.createContext(o);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);