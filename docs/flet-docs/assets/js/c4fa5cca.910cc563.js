"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[68157],{62151:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"reference/types/stackfit","title":"StackFit","description":"StackFit enum has the following values:","source":"@site/docs/reference/types/stackfit.md","sourceDirName":"reference/types","slug":"/reference/types/stackfit","permalink":"/docs/flet-docs/docs/reference/types/stackfit","draft":false,"unlisted":false,"editUrl":"https://github.com/flet-dev/website/edit/main/docs/reference/types/stackfit.md","tags":[],"version":"current","frontMatter":{"title":"StackFit","sidebar_label":"StackFit"},"sidebar":"docs","previous":{"title":"SnackBarBehavior","permalink":"/docs/flet-docs/docs/reference/types/snackbarbehavior"},"next":{"title":"StrokeCap","permalink":"/docs/flet-docs/docs/reference/types/strokecap"}}');var r=n(74848),s=n(28453);n(65537),n(79329);const o={title:"StackFit",sidebar_label:"StackFit"},l=void 0,i={},c=[{value:"<code>EXPAND</code>",id:"expand",level:3},{value:"<code>LOOSE</code>",id:"loose",level:3},{value:"<code>PASS_THROUGH</code>",id:"pass_through",level:3}];function u(e){const t={code:"code",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"StackFit"})," enum has the following values:"]}),"\n",(0,r.jsx)(t.h3,{id:"expand",children:(0,r.jsx)(t.code,{children:"EXPAND"})}),"\n",(0,r.jsxs)(t.p,{children:["The constraints passed to the stack from its parent are tightened to the biggest size allowed. For example, if the stack\nhas loose constraints with a width in the range 10 to 100 and a height in the range 0 to 600, then the\nnon-positioned ",(0,r.jsx)(t.code,{children:"controls"})," of the stack would all be sized as 100 pixels wide and 600 high."]}),"\n",(0,r.jsx)(t.h3,{id:"loose",children:(0,r.jsx)(t.code,{children:"LOOSE"})}),"\n",(0,r.jsxs)(t.p,{children:["The constraints passed to the stack from its parent are loosened. For example, if the stack has constraints that force\nit to 350x600, then this would allow the non-positioned ",(0,r.jsx)(t.code,{children:"controls"})," of the stack to have any width from 0 to 350 and any\nheight from 0 to 600."]}),"\n",(0,r.jsx)(t.h3,{id:"pass_through",children:(0,r.jsx)(t.code,{children:"PASS_THROUGH"})}),"\n",(0,r.jsxs)(t.p,{children:["The constraints passed to the stack from its parent are passed unmodified to the non-positioned ",(0,r.jsx)(t.code,{children:"controls"}),". For example,\nif an expanded Stack is a child of a Row, the horizontal constraints will be tight and the vertical constraints will be\nloose."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},79329:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var a=n(18215);const r={tabItem:"tabItem_Ymn6"};var s=n(74848);function o(e){let{children:t,hidden:n,className:o}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,o),hidden:n,children:t})}},65537:(e,t,n)=>{n.d(t,{A:()=>y});var a=n(96540),r=n(18215),s=n(65627),o=n(56347),l=n(50372),i=n(30604),c=n(11861),u=n(78749);function d(e){var t,n;return null!=(t=null==(n=a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?t:[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=null!=t?t:function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function f(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:n}=e;const r=(0,o.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,i.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace(Object.assign({},r.location,{search:t.toString()}))}),[s,r])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=h(e),[o,i]=(0,a.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const r=null!=(t=a.find((e=>e.default)))?t:a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:s}))),[c,d]=p({queryString:n,groupId:r}),[b,m]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[r,s]=(0,u.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),v=(()=>{const e=null!=c?c:b;return f({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{v&&i(v)}),[v]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!f({value:e,tabValues:s}))throw new Error("Can't select invalid tab value="+e);i(e),d(e),m(e)}),[d,m,s]),tabValues:s}}var m=n(9136);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(74848);function x(e){let{className:t,block:n,selectedValue:a,selectValue:o,tabValues:l}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),u=e=>{const t=e.currentTarget,n=i.indexOf(t),r=l[n].value;r!==a&&(c(t),o(r))},d=e=>{var t;let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{var a;const t=i.indexOf(e.currentTarget)+1;n=null!=(a=i[t])?a:i[0];break}case"ArrowLeft":{var r;const t=i.indexOf(e.currentTarget)-1;n=null!=(r=i[t])?r:i[i.length-1];break}}null==(t=n)||t.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,g.jsx)("li",Object.assign({role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>{i.push(e)},onKeyDown:d,onClick:u},s,{className:(0,r.A)("tabs__item",v.tabItem,null==s?void 0:s.className,{"tabs__item--active":a===t}),children:null!=n?n:t}),t)}))})}function k(e){let{lazy:t,children:n,selectedValue:s}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function w(e){const t=b(e);return(0,g.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,g.jsx)(x,Object.assign({},t,e)),(0,g.jsx)(k,Object.assign({},t,e))]})}function y(e){const t=(0,m.A)();return(0,g.jsx)(w,Object.assign({},e,{children:d(e.children)}),String(t))}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>l});var a=n(96540);const r={},s=a.createContext(r);function o(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);