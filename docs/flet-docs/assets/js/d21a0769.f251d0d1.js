"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[6699],{26675:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"controls/column","title":"Column","description":"A control that displays its children in a vertical array.","source":"@site/docs/controls/column.md","sourceDirName":"controls","slug":"/controls/column","permalink":"/docs/flet-docs/docs/controls/column","draft":false,"unlisted":false,"editUrl":"https://github.com/flet-dev/website/edit/main/docs/controls/column.md","tags":[],"version":"current","frontMatter":{"title":"Column","sidebar_label":"Column"},"sidebar":"docs","previous":{"title":"Card","permalink":"/docs/flet-docs/docs/controls/card"},"next":{"title":"Container","permalink":"/docs/flet-docs/docs/controls/container"}}');var o=l(74848),i=l(28453),r=l(65537),a=l(79329);const s={title:"Column",sidebar_label:"Column"},c=void 0,d={},u=[{value:"Examples",id:"examples",level:2},{value:"Column spacing",id:"column-spacing",level:3},{value:"Column wrapping",id:"column-wrapping",level:3},{value:"Column vertical alignments",id:"column-vertical-alignments",level:3},{value:"Column horizontal alignments",id:"column-horizontal-alignments",level:3},{value:"Infinite scroll list",id:"infinite-scroll-list",level:3},{value:"Scrolling column programmatically",id:"scrolling-column-programmatically",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>alignment</code>",id:"alignment",level:3},{value:"<code>auto_scroll</code>",id:"auto_scroll",level:3},{value:"<code>controls</code>",id:"controls",level:3},{value:"<code>horizontal_alignment</code>",id:"horizontal_alignment",level:3},{value:"<code>on_scroll_interval</code>",id:"on_scroll_interval",level:3},{value:"<code>rtl</code>",id:"rtl",level:3},{value:"<code>run_spacing</code>",id:"run_spacing",level:3},{value:"<code>scroll</code>",id:"scroll",level:3},{value:"<code>spacing</code>",id:"spacing",level:3},{value:"<code>tight</code>",id:"tight",level:3},{value:"<code>wrap</code>",id:"wrap",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>scroll_to(offset, delta, key, duration, curve)</code>",id:"scroll_tooffset-delta-key-duration-curve",level:3},{value:"Events",id:"events",level:2},{value:"<code>on_scroll</code>",id:"on_scroll",level:3},{value:"Expanding children",id:"expanding-children",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"A control that displays its children in a vertical array."}),"\n",(0,o.jsxs)(n.p,{children:["To cause a child control to expand and fill the available vertical space set its ",(0,o.jsx)(n.code,{children:"expand"})," property."]}),"\n","\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://flet-controls-gallery.fly.dev/layout/column",children:"Live example"})}),"\n",(0,o.jsx)(n.h3,{id:"column-spacing",children:"Column spacing"}),"\n",(0,o.jsx)("img",{src:"/docs/flet-docs/img/docs/controls/column/column-spacing.gif",className:"screenshot-50"}),"\n",(0,o.jsx)(r.A,{groupId:"language",children:(0,o.jsx)(a.A,{value:"python",label:"Python",default:!0,children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import flet as ft\n\ndef main(page: ft.Page):\n    def items(count):\n        items = []\n        for i in range(1, count + 1):\n            items.append(\n                ft.Container(\n                    content=ft.Text(value=str(i)),\n                    alignment=ft.alignment.center,\n                    width=50,\n                    height=50,\n                    bgcolor=ft.Colors.AMBER,\n                    border_radius=ft.border_radius.all(5),\n                )\n            )\n        return items\n\n    def spacing_slider_change(e):\n        col.spacing = int(e.control.value)\n        col.update()\n\n    gap_slider = ft.Slider(\n        min=0,\n        max=100,\n        divisions=10,\n        value=0,\n        label="{value}",\n        width=500,\n        on_change=spacing_slider_change,\n    )\n\n    col = ft.Column(spacing=0, controls=items(5))\n\n    page.add(ft.Column([ ft.Text("Spacing between items"), gap_slider]), col)\n\nft.app(main)\n'})})})}),"\n",(0,o.jsx)(n.h3,{id:"column-wrapping",children:"Column wrapping"}),"\n",(0,o.jsx)("img",{src:"/docs/flet-docs/img/docs/controls/column/column-wrapping.gif",className:"screenshot-70"}),"\n",(0,o.jsx)(r.A,{groupId:"language",children:(0,o.jsx)(a.A,{value:"python",label:"Python",default:!0,children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import flet as ft\n\nHEIGHT = 400\n\ndef main(page: ft.Page):\n    def items(count):\n        items = []\n        for i in range(1, count + 1):\n            items.append(\n                ft.Container(\n                    content=ft.Text(value=str(i)),\n                    alignment=ft.alignment.center,\n                    width=30,\n                    height=30,\n                    bgcolor=ft.Colors.AMBER,\n                    border_radius=ft.border_radius.all(5),\n                )\n            )\n        return items\n\n    def slider_change(e):\n        col.height = float(e.control.value)\n        col.update()\n\n    width_slider = ft.Slider(\n        min=0,\n        max=HEIGHT,\n        divisions=20,\n        value=HEIGHT,\n        label="{value}",\n        width=500,\n        on_change=slider_change,\n    )\n\n    col = ft.Column(\n        wrap=True,\n        spacing=10,\n        run_spacing=10,\n        controls=items(10),\n        height=HEIGHT,\n    )\n\n    page.add(\n        ft.Column(\n            [\n                ft.Text(\n                    "Change the column height to see how child items wrap onto multiple columns:"\n                ),\n                width_slider,\n            ]\n        ),\n        ft.Container(content=col, bgcolor=ft.Colors.AMBER_100),\n    )\n\nft.app(main)\n'})})})}),"\n",(0,o.jsx)(n.h3,{id:"column-vertical-alignments",children:"Column vertical alignments"}),"\n",(0,o.jsx)("img",{src:"/docs/flet-docs/img/docs/controls/column/column-alignment.png",className:"screenshot-70"}),"\n",(0,o.jsx)(r.A,{groupId:"language",children:(0,o.jsx)(a.A,{value:"python",label:"Python",default:!0,children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import flet as ft\n\ndef main(page: ft.Page):\n    def items(count):\n        items = []\n        for i in range(1, count + 1):\n            items.append(\n                ft.Container(\n                    content=ft.Text(value=str(i)),\n                    alignment=ft.alignment.center,\n                    width=50,\n                    height=50,\n                    bgcolor=ft.Colors.AMBER_500,\n                )\n            )\n        return items\n\n    def column_with_alignment(align: ft.MainAxisAlignment):\n        return ft.Column(\n            [\n                ft.Text(str(align), size=10),\n                ft.Container(\n                    content=ft.Column(items(3), alignment=align),\n                    bgcolor=ft.Colors.AMBER_100,\n                    height=400,\n                ),\n            ]\n        )\n\n    page.add(\n        ft.Row(\n            [\n                column_with_alignment(ft.MainAxisAlignment.START),\n                column_with_alignment(ft.MainAxisAlignment.CENTER),\n                column_with_alignment(ft.MainAxisAlignment.END),\n                column_with_alignment(ft.MainAxisAlignment.SPACE_BETWEEN),\n                column_with_alignment(ft.MainAxisAlignment.SPACE_AROUND),\n                column_with_alignment(ft.MainAxisAlignment.SPACE_EVENLY),\n            ],\n            spacing=30,\n            alignment=ft.MainAxisAlignment.START,\n        )\n    )\n\nft.app(main)\n"})})})}),"\n",(0,o.jsx)(n.h3,{id:"column-horizontal-alignments",children:"Column horizontal alignments"}),"\n",(0,o.jsx)("img",{src:"/docs/flet-docs/img/docs/controls/column/column-horiz-alignment.png",className:"screenshot-50"}),"\n",(0,o.jsx)(r.A,{groupId:"language",children:(0,o.jsx)(a.A,{value:"python",label:"Python",default:!0,children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"import flet as ft\n\ndef main(page: ft.Page):\n    def items(count):\n        items = []\n        for i in range(1, count + 1):\n            items.append(\n                ft.Container(\n                    content=ft.Text(value=str(i)),\n                    alignment=ft.alignment.center,\n                    width=50,\n                    height=50,\n                    bgcolor=ft.Colors.AMBER_500,\n                )\n            )\n        return items\n\n    def column_with_horiz_alignment(align: ft.CrossAxisAlignment):\n        return ft.Column(\n            [\n                ft.Text(str(align), size=16),\n                ft.Container(\n                    content=ft.Column(\n                        items(3),\n                        alignment=ft.MainAxisAlignment.START,\n                        horizontal_alignment=align,\n                    ),\n                    bgcolor=ft.Colors.AMBER_100,\n                    width=100,\n                ),\n            ]\n        )\n\n    page.add(\n        ft.Row(\n            [\n                column_with_horiz_alignment(ft.CrossAxisAlignment.START),\n                column_with_horiz_alignment(ft.CrossAxisAlignment.CENTER),\n                column_with_horiz_alignment(ft.CrossAxisAlignment.END),\n            ],\n            spacing=30,\n            alignment=ft.MainAxisAlignment.START,\n        )\n    )\n\nft.app(main)\n"})})})}),"\n",(0,o.jsx)(n.h3,{id:"infinite-scroll-list",children:"Infinite scroll list"}),"\n",(0,o.jsx)(n.p,{children:"The following example demonstrates adding of list items on-the-fly, as user scroll to the bottom, creating the illusion of infinite list:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import threading\nimport flet as ft\n\nclass State:\n    i = 0\n\ns = State()\nsem = threading.Semaphore()\n\ndef main(page: ft.Page):\n    def on_scroll(e: ft.OnScrollEvent):\n        if e.pixels >= e.max_scroll_extent - 100:\n            if sem.acquire(blocking=False):\n                try:\n                    for i in range(0, 10):\n                        cl.controls.append(ft.Text(f"Text line {s.i}", key=str(s.i)))\n                        s.i += 1\n                    cl.update()\n                finally:\n                    sem.release()\n\n    cl = ft.Column(\n        spacing=10,\n        height=200,\n        width=200,\n        scroll=ft.ScrollMode.ALWAYS,\n        on_scroll_interval=0,\n        on_scroll=on_scroll,\n    )\n    for i in range(0, 50):\n        cl.controls.append(ft.Text(f"Text line {s.i}", key=str(s.i)))\n        s.i += 1\n\n    page.add(ft.Container(cl, border=ft.border.all(1)))\n\nft.app(main)\n'})}),"\n",(0,o.jsx)(n.h3,{id:"scrolling-column-programmatically",children:"Scrolling column programmatically"}),"\n",(0,o.jsx)("img",{src:"/docs/flet-docs/img/docs/controls/column/column-scroll-to.png",className:"screenshot-50"}),"\n",(0,o.jsxs)(n.p,{children:["The following example demonstrates various ",(0,o.jsx)(n.code,{children:"scroll_to()"})," options as well as defines a custom scrollbar theme:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import flet as ft\n\ndef main(page: ft.Page):\n    page.theme = ft.Theme(\n        scrollbar_theme=ft.ScrollbarTheme(\n            track_color={\n                ft.ControlState.HOVERED: ft.Colors.AMBER,\n                ft.ControlState.DEFAULT: ft.Colors.TRANSPARENT,\n            },\n            track_visibility=True,\n            track_border_color=ft.Colors.BLUE,\n            thumb_visibility=True,\n            thumb_color={\n                ft.ControlState.HOVERED: ft.Colors.RED,\n                ft.ControlState.DEFAULT: ft.Colors.GREY_300,\n            },\n            thickness=30,\n            radius=15,\n            main_axis_margin=5,\n            cross_axis_margin=10,\n            # interactive=False,\n        )\n    )\n\n    cl = ft.Column(\n        spacing=10,\n        height=200,\n        width=float("inf"),\n        scroll=ft.ScrollMode.ALWAYS,\n    )\n    for i in range(0, 100):\n        cl.controls.append(ft.Text(f"Text line {i}", key=str(i)))\n\n    def scroll_to_offset(e):\n        cl.scroll_to(offset=100, duration=1000)\n\n    def scroll_to_start(e):\n        cl.scroll_to(offset=0, duration=1000)\n\n    def scroll_to_end(e):\n        cl.scroll_to(offset=-1, duration=2000, curve=ft.AnimationCurve.EASE_IN_OUT)\n\n    def scroll_to_key(e):\n        cl.scroll_to(key="20", duration=1000)\n\n    def scroll_to_delta(e):\n        cl.scroll_to(delta=40, duration=200)\n\n    def scroll_to_minus_delta(e):\n        cl.scroll_to(delta=-40, duration=200)\n\n    page.add(\n        ft.Container(cl, border=ft.border.all(1)),\n        ft.ElevatedButton("Scroll to offset 100", on_click=scroll_to_offset),\n        ft.Row(\n            [\n                ft.ElevatedButton("Scroll to start", on_click=scroll_to_start),\n                ft.ElevatedButton("Scroll to end", on_click=scroll_to_end),\n            ]\n        ),\n        ft.ElevatedButton("Scroll to key \'20\'", on_click=scroll_to_key),\n        ft.Row(\n            [\n                ft.ElevatedButton("Scroll -40", on_click=scroll_to_minus_delta),\n                ft.ElevatedButton("Scroll +40", on_click=scroll_to_delta),\n            ]\n        ),\n    )\n\nft.app(main)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsx)(n.h3,{id:"alignment",children:(0,o.jsx)(n.code,{children:"alignment"})}),"\n",(0,o.jsx)(n.p,{children:"How the child Controls should be placed vertically."}),"\n",(0,o.jsxs)(n.p,{children:["Value is of type ",(0,o.jsx)(n.a,{href:"/docs/reference/types/mainaxisalignment",children:(0,o.jsx)(n.code,{children:"MainAxisAlignment"})}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"auto_scroll",children:(0,o.jsx)(n.code,{children:"auto_scroll"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"True"})," if scrollbar should automatically move its position to the end when children updated. Must be ",(0,o.jsx)(n.code,{children:"False"})," for ",(0,o.jsx)(n.code,{children:"scroll_to()"})," method to work."]}),"\n",(0,o.jsx)(n.h3,{id:"controls",children:(0,o.jsx)(n.code,{children:"controls"})}),"\n",(0,o.jsx)(n.p,{children:"A list of Controls to display inside the Column."}),"\n",(0,o.jsx)(n.h3,{id:"horizontal_alignment",children:(0,o.jsx)(n.code,{children:"horizontal_alignment"})}),"\n",(0,o.jsx)(n.p,{children:"How the child Controls should be placed horizontally."}),"\n",(0,o.jsxs)(n.p,{children:["Value is of type ",(0,o.jsx)(n.a,{href:"/docs/reference/types/crossaxisalignment",children:(0,o.jsx)(n.code,{children:"CrossAxisAlignment"})})," and defaults\nto ",(0,o.jsx)(n.code,{children:"CrossAxisAlignment.START"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"on_scroll_interval",children:(0,o.jsx)(n.code,{children:"on_scroll_interval"})}),"\n",(0,o.jsxs)(n.p,{children:["Throttling in milliseconds for ",(0,o.jsx)(n.code,{children:"on_scroll"})," event. Default is ",(0,o.jsx)(n.code,{children:"10"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"rtl",children:(0,o.jsx)(n.code,{children:"rtl"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"True"})," to set text direction to right-to-left. Default is ",(0,o.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"run_spacing",children:(0,o.jsx)(n.code,{children:"run_spacing"})}),"\n",(0,o.jsxs)(n.p,{children:["Spacing between runs when ",(0,o.jsx)(n.code,{children:"wrap=True"}),". Default value is 10."]}),"\n",(0,o.jsx)(n.h3,{id:"scroll",children:(0,o.jsx)(n.code,{children:"scroll"})}),"\n",(0,o.jsx)(n.p,{children:"Enables a vertical scrolling for the Column to prevent its content overflow."}),"\n",(0,o.jsxs)(n.p,{children:["Value is of type ",(0,o.jsx)(n.a,{href:"/docs/reference/types/scrollmode",children:(0,o.jsx)(n.code,{children:"ScrollMode"})})," and defaults to ",(0,o.jsx)(n.code,{children:"ScrollMode.None"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"spacing",children:(0,o.jsx)(n.code,{children:"spacing"})}),"\n",(0,o.jsxs)(n.p,{children:["Spacing between controls in a Column. Default value is 10 virtual pixels. Spacing is applied only when ",(0,o.jsx)(n.code,{children:"alignment"})," is set to ",(0,o.jsx)(n.code,{children:"start"}),", ",(0,o.jsx)(n.code,{children:"end"})," or ",(0,o.jsx)(n.code,{children:"center"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"tight",children:(0,o.jsx)(n.code,{children:"tight"})}),"\n",(0,o.jsx)(n.p,{children:"Specifies how much space should be occupied vertically."}),"\n",(0,o.jsxs)(n.p,{children:["Defaults to ",(0,o.jsx)(n.code,{children:"False"})," - allocate all space to children."]}),"\n",(0,o.jsx)(n.h3,{id:"wrap",children:(0,o.jsx)(n.code,{children:"wrap"})}),"\n",(0,o.jsxs)(n.p,{children:["When set to ",(0,o.jsx)(n.code,{children:"True"})," the Column will put child controls into additional columns (runs) if they don't fit a single column."]}),"\n",(0,o.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,o.jsx)(n.h3,{id:"scroll_tooffset-delta-key-duration-curve",children:(0,o.jsx)(n.code,{children:"scroll_to(offset, delta, key, duration, curve)"})}),"\n",(0,o.jsxs)(n.p,{children:["Moves scroll position to either absolute ",(0,o.jsx)(n.code,{children:"offset"}),", relative ",(0,o.jsx)(n.code,{children:"delta"})," or jump to the control with specified ",(0,o.jsx)(n.code,{children:"key"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"offset"})," is an absolute value between minimum and maximum extents of a scrollable control, for example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"products.scroll_to(offset=100, duration=1000)\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"offset"})," could be a negative to scroll from the end of a scrollable. For example, to scroll to the very end:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"products.scroll_to(offset=-1, duration=1000)\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"delta"})," allows moving scroll relatively to the current position. Use positive ",(0,o.jsx)(n.code,{children:"delta"})," to scroll forward and negative ",(0,o.jsx)(n.code,{children:"delta"})," to scroll backward. For example, to move scroll on 50 pixels forward:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"products.scroll_to(delta=50)\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"key"})," allows moving scroll position to a control with specified ",(0,o.jsx)(n.code,{children:"key"}),". Most of Flet controls have ",(0,o.jsx)(n.code,{children:"key"}),' property which is translated to Flutter as "global key". ',(0,o.jsx)(n.code,{children:"key"})," must be unique for the entire page/view. For example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import flet as ft\n\ndef main(page: ft.Page):\n    cl = ft.Column(\n        spacing=10,\n        height=200,\n        width=200,\n        scroll=ft.ScrollMode.ALWAYS,\n    )\n    for i in range(0, 50):\n        cl.controls.append(ft.Text(f"Text line {i}", key=str(i)))\n\n    def scroll_to_key(e):\n        cl.scroll_to(key="20", duration=1000)\n\n    page.add(\n        ft.Container(cl, border=ft.border.all(1)),\n        ft.ElevatedButton("Scroll to key \'20\'", on_click=scroll_to_key),\n    )\n\nft.app(main)\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"scroll_to()"})," method won't work with ",(0,o.jsx)(n.code,{children:"ListView"})," and ",(0,o.jsx)(n.code,{children:"GridView"})," controls building their items dynamically."]})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"duration"})," is scrolling animation duration in milliseconds. Defaults to ",(0,o.jsx)(n.code,{children:"0"})," - no animation."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"curve"})," configures animation curve. Property value is ",(0,o.jsx)(n.a,{href:"/docs/reference/types/animationcurve",children:(0,o.jsx)(n.code,{children:"AnimationCurve"})})," enum.\nDefaults to ",(0,o.jsx)(n.code,{children:"AnimationCurve.EASE"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,o.jsx)(n.h3,{id:"on_scroll",children:(0,o.jsx)(n.code,{children:"on_scroll"})}),"\n",(0,o.jsx)(n.p,{children:"Fires when scroll position is changed by a user."}),"\n",(0,o.jsxs)(n.p,{children:["Event handler argument is an instance of ",(0,o.jsx)(n.a,{href:"/docs/reference/types/onscrollevent",children:(0,o.jsx)(n.code,{children:"OnScrollEvent"})})," class."]}),"\n",(0,o.jsx)(n.h2,{id:"expanding-children",children:"Expanding children"}),"\n",(0,o.jsxs)(n.p,{children:['When a child Control is placed into a Column you can "expand" it to fill the available space. Every Control has ',(0,o.jsx)(n.code,{children:"expand"})," property that can have either a boolean value (",(0,o.jsx)(n.code,{children:"True"}),' - expand control to fill all available space) or an integer - an "expand factor" specifying how to divide a free space with other expanded child controls. For example, this code creates a column with a Container taking all available space and a Text control at the bottom serving as a status bar:']}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'r = ft.Column([\n  ft.Container(expand=True, content=ft.Text("Here is search results")),\n  ft.Text("Records found: 10")\n])\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The following example with numeric expand factors creates a Column with 3 containers in it and having heights of ",(0,o.jsx)(n.code,{children:"20% (1/5)"}),", ",(0,o.jsx)(n.code,{children:"60% (3/5)"})," and ",(0,o.jsx)(n.code,{children:"20% (1/5)"})," respectively:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'r = ft.Column([\n  ft.Container(expand=1, content=ft.Text("Header")),\n  ft.Container(expand=3, content=ft.Text("Body")),\n  ft.Container(expand=1, content=ft.Text("Footer"))\n])\n'})}),"\n",(0,o.jsxs)(n.p,{children:["In general, the resulting height of a child in percents is calculated as ",(0,o.jsx)(n.code,{children:"expand / sum(all expands) * 100%"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["If you need to give the child Control of the Column the flexibility to expand to fill the available space vertically but not require it to fill the available space, set its ",(0,o.jsx)(n.code,{children:"expand_loose"})," property to ",(0,o.jsx)(n.code,{children:"True"}),"."]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},79329:(e,n,l)=>{l.d(n,{A:()=>r});l(96540);var t=l(18215);const o={tabItem:"tabItem_Ymn6"};var i=l(74848);function r(e){let{children:n,hidden:l,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(o.tabItem,r),hidden:l,children:n})}},65537:(e,n,l)=>{l.d(n,{A:()=>y});var t=l(96540),o=l(18215),i=l(65627),r=l(56347),a=l(50372),s=l(30604),c=l(11861),d=l(78749);function u(e){var n,l;return null!=(n=null==(l=t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:l.filter(Boolean))?n:[]}function h(e){const{values:n,children:l}=e;return(0,t.useMemo)((()=>{const e=null!=n?n:function(e){return u(e).map((e=>{let{props:{value:n,label:l,attributes:t,default:o}}=e;return{value:n,label:l,attributes:t,default:o}}))}(l);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error('Docusaurus error: Duplicate values "'+n.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,l])}function m(e){let{value:n,tabValues:l}=e;return l.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:l}=e;const o=(0,r.W6)(),i=function(e){let{queryString:n=!1,groupId:l}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!l)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=l?l:null}({queryString:n,groupId:l});return[(0,s.aZ)(i),(0,t.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(o.location.search);n.set(i,e),o.replace(Object.assign({},o.location,{search:n.toString()}))}),[i,o])]}function p(e){const{defaultValue:n,queryString:l=!1,groupId:o}=e,i=h(e),[r,s]=(0,t.useState)((()=>function(e){var n;let{defaultValue:l,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(l){if(!m({value:l,tabValues:t}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+l+'" but none of its children has the corresponding value. Available values are: '+t.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return l}const o=null!=(n=t.find((e=>e.default)))?n:t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:i}))),[c,u]=f({queryString:l,groupId:o}),[p,g]=function(e){let{groupId:n}=e;const l=function(e){return e?"docusaurus.tab."+e:null}(n),[o,i]=(0,d.Dv)(l);return[o,(0,t.useCallback)((e=>{l&&i.set(e)}),[l,i])]}({groupId:o}),x=(()=>{const e=null!=c?c:p;return m({value:e,tabValues:i})?e:null})();(0,a.A)((()=>{x&&s(x)}),[x]);return{selectedValue:r,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:i}))throw new Error("Can't select invalid tab value="+e);s(e),u(e),g(e)}),[u,g,i]),tabValues:i}}var g=l(9136);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=l(74848);function j(e){let{className:n,block:l,selectedValue:t,selectValue:r,tabValues:a}=e;const s=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,l=s.indexOf(n),o=a[l].value;o!==t&&(c(n),r(o))},u=e=>{var n;let l=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{var t;const n=s.indexOf(e.currentTarget)+1;l=null!=(t=s[n])?t:s[0];break}case"ArrowLeft":{var o;const n=s.indexOf(e.currentTarget)-1;l=null!=(o=s[n])?o:s[s.length-1];break}}null==(n=l)||n.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":l},n),children:a.map((e=>{let{value:n,label:l,attributes:i}=e;return(0,v.jsx)("li",Object.assign({role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{s.push(e)},onKeyDown:u,onClick:d},i,{className:(0,o.A)("tabs__item",x.tabItem,null==i?void 0:i.className,{"tabs__item--active":t===n}),children:null!=l?l:n}),n)}))})}function _(e){let{lazy:n,children:l,selectedValue:i}=e;const r=(Array.isArray(l)?l:[l]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,t.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function b(e){const n=p(e);return(0,v.jsxs)("div",{className:(0,o.A)("tabs-container",x.tabList),children:[(0,v.jsx)(j,Object.assign({},n,e)),(0,v.jsx)(_,Object.assign({},n,e))]})}function y(e){const n=(0,g.A)();return(0,v.jsx)(b,Object.assign({},e,{children:u(e.children)}),String(n))}},28453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>a});var t=l(96540);const o={},i=t.createContext(o);function r(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);