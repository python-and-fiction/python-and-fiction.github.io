"use strict";(self.webpackChunkflet_dev=self.webpackChunkflet_dev||[]).push([[72211],{11486:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"getting-started/running-app","title":"Running Flet app","description":"Flet app can be run as a desktop or web app using a single flet run command.","source":"@site/docs/getting-started/running-app.md","sourceDirName":"getting-started","slug":"/getting-started/running-app","permalink":"/docs/flet-docs/docs/getting-started/running-app","draft":false,"unlisted":false,"editUrl":"https://github.com/flet-dev/website/edit/main/docs/getting-started/running-app.md","tags":[],"version":"current","frontMatter":{"title":"Running Flet app"},"sidebar":"docs","previous":{"title":"Create a new Flet app","permalink":"/docs/flet-docs/docs/getting-started/create-flet-app"},"next":{"title":"Flet controls","permalink":"/docs/flet-docs/docs/getting-started/flet-controls"}}');var r=t(74848),a=t(28453);const l={title:"Running Flet app"},i=void 0,o={},c=[{value:"Run as a desktop app",id:"run-as-a-desktop-app",level:2},{value:"Run as a web app",id:"run-as-a-web-app",level:2},{value:"Hot reload",id:"hot-reload",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Flet app can be run as a desktop or web app using a single ",(0,r.jsx)(n.code,{children:"flet run"})," command."]}),"\n",(0,r.jsx)(n.h2,{id:"run-as-a-desktop-app",children:"Run as a desktop app"}),"\n",(0,r.jsx)(n.p,{children:"To run Flet app as a desktop app, use the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"flet run\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This command will run ",(0,r.jsx)(n.code,{children:"main.py"})," located in the current directory."]}),"\n",(0,r.jsx)(n.p,{children:"If you need to provide a different path to the file, use the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"flet run [script]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To run ",(0,r.jsx)(n.code,{children:"main.py"})," located in a different directory, provide an absolute or a relative path to the directory where it is located, for example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"flet run /Users/JohnSmith/Documents/projects/flet-app\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To run script with a name other than ",(0,r.jsx)(n.code,{children:"main.py"}),", provide an absolute or a relative path to the file, for example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"flet run counter.py\n"})}),"\n",(0,r.jsx)(n.p,{children:"The app will be started in a native OS window:"}),"\n",(0,r.jsxs)("div",{className:"row",children:[(0,r.jsxs)("div",{className:"col col--6",style:{textAlign:"center"},children:[(0,r.jsx)("h3",{children:"macOS"}),(0,r.jsx)("img",{src:"/docs/flet-docs/img/docs/getting-started/flet-counter-macos.png",className:"screenshot-70"})]}),(0,r.jsxs)("div",{className:"col col--6",style:{textAlign:"center"},children:[(0,r.jsx)("h3",{children:"Windows"}),(0,r.jsx)("img",{src:"/docs/flet-docs/img/docs/getting-started/flet-counter-windows.png",className:"screenshot-60"})]})]}),"\n",(0,r.jsx)(n.h2,{id:"run-as-a-web-app",children:"Run as a web app"}),"\n",(0,r.jsx)(n.p,{children:"To run Flet app as a web app, use the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"flet run --web [script]\n"})}),"\n",(0,r.jsx)(n.p,{children:"A new browser window/tab will be opened and the app will be using a random TCP port:"}),"\n",(0,r.jsx)("img",{src:"/docs/flet-docs/img/docs/getting-started/flet-counter-safari.png",className:"screenshot-50"}),"\n",(0,r.jsxs)(n.p,{children:["To run on a fixed port use ",(0,r.jsx)(n.code,{children:"--port"})," (",(0,r.jsx)(n.code,{children:"-p"}),") option, for example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"flet run --web --port 8000 app.py\n"})}),"\n",(0,r.jsx)(n.h2,{id:"hot-reload",children:"Hot reload"}),"\n",(0,r.jsx)(n.p,{children:"By default, Flet will watch the script file that was run and reload the app whenever the file is changed and saved, but will not watch for changes in other files."}),"\n",(0,r.jsx)(n.p,{children:"To watch all the files in the same directory, use the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"poetry run flet run -d [script]\n"})}),"\n",(0,r.jsx)(n.p,{children:"To watch script directory and all sub-directories recursively, use the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"poetry run flet run -d -r [script]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can find more information about ",(0,r.jsx)(n.code,{children:"flet run"})," command ",(0,r.jsx)(n.a,{href:"/docs/reference/cli/run",children:"here"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var s=t(96540);const r={},a=s.createContext(r);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);